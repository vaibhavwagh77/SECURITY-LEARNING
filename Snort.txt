https://codeshare.io/NKJ1ro


Debian:
```````
# apt install snort -y

Update shared libs: .so
```````````````````
# ldconfig
 
2. Info:
````````
# cat /etc/passwd | grep snort

snort:x:130:138:Snort IDS:/var/log/snort:/usr/sbin/nologin

3. Config:
```````````
# ls /etc/snort

Log:
````
# ls /var/log/snort

main configuration file: /etc/snort/snort.conf

NOTE: take backup of original data.

# cp -av /etc/snort/snort.conf /etc/snort/snort.conf_orig_$(date -I)

4. Analyse config file:
```````````````````````
# vim /etc/snort/snort.conf

Comment this line:
#ipvar HOME_NET any

And add new line
ipvar HOME_NET 192.168.206.0/24

And comment all the rules accept local_rules.

:wq

Test the snort rule/config:
```````````````````````````
# snort -T -i enp0s3 -c /etc/snort/snort.conf

-T : Test
-i : interface
-c : config

Initializing rule chains...
0 Snort rules read
    0 detection rules
    0 decoder rules
    0 preprocessor rules
0 Option Chains linked into 0 Chain Headers


Snort as a daemon
``````````````````
# snort -D



Time to configure own rules:
`````````````````````````````
** Snort rules are devided into two logical sections, the rule header and the rule options. **

1. Rule Header: The rule header contains the rule's action, protocol, source and destination IP address and netmask, the source and destination port information.

2. Rule Options: The rule option section contains alert message and information on which part of packet should be inspected to determine if rule action should be taken.


Rule Syntax:
````````````
<action> <proto> <src_ip> <src_port> -> <dst_ip> <dst_port> (msg:"<msg>"; sid:"<signature>"; rev:1;)

For custom rule, signature ID starts from 100001, before 100000 reserved for snort.


Rule Actions:
`````````````
alert		: Alert and log the packet
log		: log the packet
pass		: ignore the packet
drop		: block and log the packet
reject		: block the packet, log it and send TCP reset 
sdrop		: block the packet and do not log it

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

________________________
a) ANY packet detection:
````````````````````````
# vim /etc/snort/rules/local.rules

alert ip any any -> any any (msg: "IP Packet detected"; sid: 10000; rev:1;) 

# snort -A console -q -i eth0 -c /etc/snort/snort.conf

02/13-12:39:48.921203  [**] [1:10000:1] IP Packet detected [**] [Priority: 0] {UDP} 143.244.134.227:123 -> 192.168.86.128:48971


______________________
b) PING Detection rule:
```````````````````````
# vim /etc/snort/rules/local.rules

alert icmp any any -> $HOME_NET any (msg: "LOL ICMP"; sid: 1000001; rev: 1;)

# snort -T -i eth0 -c /etc/snort/snort.conf	[ TEST ]
# snort -A console -q -i eth0 -c /etc/snort/snort.conf [ Debug ]

02/13-12:27:06.070450  [**] [1:1000001:1] LOL ICMP [**] [Priority: 0] {ICMP} 192.168.86.1 -> 192.168.86.128
02/13-12:27:06.070470  [**] [1:1000001:1] LOL ICMP [**] [Priority: 0] {ICMP} 192.168.86.128 -> 192.168.86.1

________________________________
c) FTP Connection Detection rule:
`````````````````````````````````

# vim /etc/snort/rules/local.rules

alert tcp any any -> $HOME_NET 21 (msg: "FTP Connection"; sid: 1000002; rev: 1;)

# snort -A console -q -i eth0 -c /etc/snort/snort.conf

02/13-12:32:43.635836  [**] [1:1000002:1] FTP Connection [**] [Priority: 0] {TCP} 192.168.86.1:37519 -> 192.168.86.128:21
02/13-12:32:43.636304  [**] [1:1000002:1] FTP Connection [**] [Priority: 0] {TCP} 192.168.86.1:37519 -> 192.168.86.128:21
02/13-12:32:43.692072  [**] [1:1000002:1] FTP Connection [**] [Priority: 0] {TCP} 192.168.86.1:37519 -> 192.168.86.128:21
02/13-12:32:45.712857  [**] [1:1000002:1] FTP Connection [**] [Priority: 0] {TCP} 192.168.86.1:37519 -> 192.168.86.128:21
02/13-12:32:45.714615  [**] [1:1000002:1] FTP Connection [**] [Priority: 0] {TCP} 192.168.86.1:37519 -> 192.168.86.128:21

______________________
d) FLAG detection rule:
```````````````````````
F - FIN 
S - SYN
R - RST
P - PSH
A - ACK
U - URG
0 (zero) - NO FLAG

There are also logical operators:
`````````````````````````````````
+ - ALL flag, match on all specified flags plus any others
* - ANY flag, match on any of the specified flags
! - NOT flag, match if the specified flags aren't set in the packet

# vim /etc/snort/rules/local.rules

alert tcp any any -> $HOME_NET any (flags: S; msg: "SYN Packet"; sid: 1000003; rev: 1;)


# snort -A console -q -i eth0 -c /etc/snort/snort.conf

